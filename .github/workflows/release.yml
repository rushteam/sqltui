name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build-and-release:
    name: Build artifacts and publish GitHub Release
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - os: macos-latest
            target: aarch64-apple-darwin
          - os: windows-latest
            target: x86_64-pc-windows-msvc

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Cache cargo
        uses: Swatinem/rust-cache@v2

      - name: Build (release)
        run: cargo build --release --locked

      - name: Package (Unix)
        if: runner.os != 'Windows'
        shell: bash
        run: |
          set -euo pipefail
          BIN_NAME="sqltui-rs"
          VERSION="${GITHUB_REF_NAME}"
          TARGET="${{ matrix.target }}"
          mkdir -p dist
          STAGE="dist/${BIN_NAME}-${VERSION}-${TARGET}"
          mkdir -p "${STAGE}"
          # 放入二进制
          cp "target/release/${BIN_NAME}" "${STAGE}/"
          chmod +x "${STAGE}/${BIN_NAME}"
          # 可选附加文件
          [ -f LICENSE ] && cp LICENSE "${STAGE}/" || true
          [ -f README.md ] && cp README.md "${STAGE}/" || true
          # 一次性打包
          tar -czf "dist/${BIN_NAME}-${VERSION}-${TARGET}.tar.gz" -C dist "${BIN_NAME}-${VERSION}-${TARGET}"

      - name: Package (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          $ErrorActionPreference = 'Stop'
          $BinName = 'sqltui-rs.exe'
          $Version = '${{ github.ref_name }}'
          $Target = '${{ matrix.target }}'
          New-Item -ItemType Directory -Force -Path dist | Out-Null
          $Archive = "dist/sqltui-rs-$Version-$Target.zip"
          Compress-Archive -Path "target/release/$BinName" -DestinationPath $Archive
          if (Test-Path LICENSE) {
            Compress-Archive -Update -Path LICENSE -DestinationPath $Archive
          }
          if (Test-Path README.md) {
            Compress-Archive -Update -Path README.md -DestinationPath $Archive
          }

      - name: Upload artifacts (workflow)
        uses: actions/upload-artifact@v4
        with:
          name: sqltui-rs-${{ github.ref_name }}-${{ matrix.target }}
          path: dist/*

      - name: Create GitHub Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          files: dist/**
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


